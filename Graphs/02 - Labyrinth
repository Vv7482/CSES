#include <bits/stdc++.h>
using namespace std;
#define int long long
 
bool BFS(int &i , int &j , int m , int n , vector<vector<char>> &mat , vector<vector<int>> &vis , vector<vector<pair<pair<int,int>,char>>> &par){
    queue<pair<int,int>> q;
    q.push({i,j});
    vis[i][j] = 1;
    
    while(!q.empty()){
        int row = q.front().first;
        int col = q.front().second;
        q.pop();
        
        int x[] = {-1,0,1,0};
        int y[] = {0,1,0,-1};
        for(int k=0 ; k<4 ; k++){
            int n_row = row + x[k], n_col = col + y[k];
            if(n_row>=0 && n_row<m && n_col>=0 && n_col<n && vis[n_row][n_col] == -1 && (mat[n_row][n_col] == '.' || mat[n_row][n_col] == 'B')){
 
				par[n_row][n_col].first = {row,col}; 
                if(k==0) par[n_row][n_col].second = 'U';
                else if(k==1) par[n_row][n_col].second = 'R';
                else if(k==2) par[n_row][n_col].second = 'D';
                else par[n_row][n_col].second = 'L';
                
                if(mat[n_row][n_col] == 'B') {
					i = n_row , j = n_col;
					return true;
				}
                
                q.push({n_row , n_col});
                vis[n_row][n_col] = 1;
            }
        }
    }
    return false;
}
 
	
 
 
void solve() {
	int m,n;
	cin >> m >> n;
	vector<vector<char>> mat(m,vector<char>(n));
	int row=0 , col=0;
	for(int i=0 ; i<m ; i++){
		for(int j=0 ; j<n ; j++){
			cin>>mat[i][j];
			if(mat[i][j] == 'A'){
				row = i , col = j;
			}
		}
	}
	
	vector<vector<int>> vis(m , vector<int>(n,-1));
	vector<vector<pair<pair<int,int>,char>>> par(m , vector<pair<pair<int,int>,char>>(n,{{-1,-1},'?'}));
	
	
		auto ans = BFS(row,col,m,n,mat,vis,par);
		if(ans){
			cout<< "YES" << '\n';
			string result;
			while(par[row][col].first != pair<int,int>{-1,-1}){
				result += par[row][col].second;
				int n_row = par[row][col].first.first;
				int n_col = par[row][col].first.second;
				row = n_row;
				col = n_col;
			}
			reverse(result.begin() , result.end());
			cout<<result.length()<<'\n'<<result<<'\n';
		}else{
			cout<<"NO"<<'\n';
		}
		return;
	
		
		
}
 
signed main() {
    	ios_base::sync_with_stdio(0);
    	cin.tie(0);
    	cout.tie(0);
 
    	solve();
}
